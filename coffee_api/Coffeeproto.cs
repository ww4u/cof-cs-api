// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: coffeeproto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RemoteApiRs232 {

  /// <summary>Holder for reflection information generated from coffeeproto.proto</summary>
  public static partial class CoffeeprotoReflection {

    #region Descriptor
    /// <summary>File descriptor for coffeeproto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoffeeprotoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFjb2ZmZWVwcm90by5wcm90bxIOUmVtb3RlQXBpUnMyMzIi5QUKCkFwaU1l",
            "c3NhZ2USGAoQcHJvdG9jb2xfdmVyc2lvbhgBIAEoDRITCgtzZXF1ZW5jZV9p",
            "ZBgCIAEoDRI2Cg1zdGFydF9wcm9kdWN0GIEgIAEoCzIcLlJlbW90ZUFwaVJz",
            "MjMyLlN0YXJ0UHJvZHVjdEgAEjsKEGdldF9wcm9kdWN0X2xpc3QYgiAgASgL",
            "Mh4uUmVtb3RlQXBpUnMyMzIuR2V0UHJvZHVjdExpc3RIABI7Cg9wcm9kdWN0",
            "X3N0YXJ0ZWQYgYABIAEoCzIeLlJlbW90ZUFwaVJzMjMyLlByb2R1Y3RTdGFy",
            "dGVkSAASNQoMcHJvZHVjdF9saXN0GIKAASABKAsyGy5SZW1vdGVBcGlSczIz",
            "Mi5Qcm9kdWN0TGlzdEgAEjMKC2Vycm9yX2V2ZW50GICAAiABKAsyGi5SZW1v",
            "dGVBcGlSczIzMi5FcnJvckV2ZW50SAASPQoQcHJvZHVjdF9maW5pc2hlZBiB",
            "gAIgASgLMh8uUmVtb3RlQXBpUnMyMzIuUHJvZHVjdEZpbmlzaGVkSAASVAoc",
            "cHJvZHVjdF9hdmFpbGFiaWxpdHlfY2hhbmdlZBiCgAIgASgLMiouUmVtb3Rl",
            "QXBpUnMyMzIuUHJvZHVjdEF2YWlsYWJpbGl0eUNoYW5nZWRIABI9ChByaW5z",
            "aW5nX3VwY29taW5nGIOAAiABKAsyHy5SZW1vdGVBcGlSczIzMi5SaW5zaW5n",
            "VXBjb21pbmdIABI7Cg91bmtub3duX21lc3NhZ2UYgIADIAEoCzIeLlJlbW90",
            "ZUFwaVJzMjMyLlVua25vd25NZXNzYWdlSAASLwoJd3JvbmdfY3JjGIGAAyAB",
            "KAsyGC5SZW1vdGVBcGlSczIzMi5Xcm9uZ0NyY0gAEjkKDmJyb2tlbl9tZXNz",
            "YWdlGIKAAyABKAsyHS5SZW1vdGVBcGlSczIzMi5Ccm9rZW5NZXNzYWdlSABC",
            "DQoLYXBpX21lc3NhZ2UiOQoMU3RhcnRQcm9kdWN0EhIKCnByb2R1Y3RfaWQY",
            "ASABKAkSFQoNc3RhcnRfZGVsYXlfcxgCIAEoASIQCg5HZXRQcm9kdWN0TGlz",
            "dCJFCg5Qcm9kdWN0U3RhcnRlZBIzCg1yZXNwb25zZV9jb2RlGAEgASgOMhwu",
            "UmVtb3RlQXBpUnMyMzIuUmVzcG9uc2VDb2RlIroBCgtQcm9kdWN0TGlzdBIz",
            "Cg1yZXNwb25zZV9jb2RlGAEgASgOMhwuUmVtb3RlQXBpUnMyMzIuUmVzcG9u",
            "c2VDb2RlEkIKDHByb2R1Y3RfbGlzdBgCIAMoCzIsLlJlbW90ZUFwaVJzMjMy",
            "LlByb2R1Y3RMaXN0LlByb2R1Y3RMaXN0RW50cnkaMgoQUHJvZHVjdExpc3RF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIkcKCkVycm9y",
            "RXZlbnQSFAoMZXJyb3JfbnVtYmVyGAEgASgNEg0KBXRpdGxlGAIgASgJEhQK",
            "DHNvdXJjZV9pbmRleBgDIAEoDSI2Cg9Qcm9kdWN0RmluaXNoZWQSEgoKcHJv",
            "ZHVjdF9pZBgBIAEoCRIPCgdzdWNjZXNzGAIgASgIIjEKGlByb2R1Y3RBdmFp",
            "bGFiaWxpdHlDaGFuZ2VkEhMKC3Byb2R1Y3RfaWRzGAEgAygJIiYKD1JpbnNp",
            "bmdVcGNvbWluZxITCgtzdGFydF9pbl9tcxgBIAEoDSIQCg5Vbmtub3duTWVz",
            "c2FnZSIKCghXcm9uZ0NyYyIPCg1Ccm9rZW5NZXNzYWdlKrwBCgxSZXNwb25z",
            "ZUNvZGUSGQoVVU5LTk9XTl9SRVNQT05TRV9DT0RFEAASCwoHU1VDQ0VTUxAB",
            "EhUKEUlOVkFMSURfUEFSQU1FVEVSEAISFgoSREJVU19BREFQVEVSX0VSUk9S",
            "EAMSEQoNR0VORVJBTF9FUlJPUhAEEg8KC1NZU1RFTV9CVVNZEGQSFgoSVU5L",
            "Tk9XTl9QUk9EVUNUX0lEEGUSGQoVUFJPRFVDVF9OT1RfQVZBSUxBQkxFEGZi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RemoteApiRs232.ResponseCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.ApiMessage), global::RemoteApiRs232.ApiMessage.Parser, new[]{ "ProtocolVersion", "SequenceId", "StartProduct", "GetProductList", "ProductStarted", "ProductList", "ErrorEvent", "ProductFinished", "ProductAvailabilityChanged", "RinsingUpcoming", "UnknownMessage", "WrongCrc", "BrokenMessage" }, new[]{ "ApiMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.StartProduct), global::RemoteApiRs232.StartProduct.Parser, new[]{ "ProductId", "StartDelayS" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.GetProductList), global::RemoteApiRs232.GetProductList.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.ProductStarted), global::RemoteApiRs232.ProductStarted.Parser, new[]{ "ResponseCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.ProductList), global::RemoteApiRs232.ProductList.Parser, new[]{ "ResponseCode", "ProductList_" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.ErrorEvent), global::RemoteApiRs232.ErrorEvent.Parser, new[]{ "ErrorNumber", "Title", "SourceIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.ProductFinished), global::RemoteApiRs232.ProductFinished.Parser, new[]{ "ProductId", "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.ProductAvailabilityChanged), global::RemoteApiRs232.ProductAvailabilityChanged.Parser, new[]{ "ProductIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.RinsingUpcoming), global::RemoteApiRs232.RinsingUpcoming.Parser, new[]{ "StartInMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.UnknownMessage), global::RemoteApiRs232.UnknownMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.WrongCrc), global::RemoteApiRs232.WrongCrc.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RemoteApiRs232.BrokenMessage), global::RemoteApiRs232.BrokenMessage.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ResponseCode {
    /// <summary>
    /// Place holder for protobuf
    /// </summary>
    [pbr::OriginalName("UNKNOWN_RESPONSE_CODE")] UnknownResponseCode = 0,
    /// <summary>
    /// The request succeeded
    /// </summary>
    [pbr::OriginalName("SUCCESS")] Success = 1,
    /// <summary>
    /// One of the given parameters is invalid
    /// </summary>
    [pbr::OriginalName("INVALID_PARAMETER")] InvalidParameter = 2,
    /// <summary>
    /// A failure occured in the communication between the remote API comonent and the Application
    /// </summary>
    [pbr::OriginalName("DBUS_ADAPTER_ERROR")] DbusAdapterError = 3,
    /// <summary>
    /// The request failed due to not further specified issues
    /// </summary>
    [pbr::OriginalName("GENERAL_ERROR")] GeneralError = 4,
    /// <summary>
    /// The application is currently completing another request and can't execute this request
    /// </summary>
    [pbr::OriginalName("SYSTEM_BUSY")] SystemBusy = 100,
    /// <summary>
    /// The product id specified in a request is not known
    /// </summary>
    [pbr::OriginalName("UNKNOWN_PRODUCT_ID")] UnknownProductId = 101,
    /// <summary>
    /// The product is known but cannot be poured at the moment
    /// </summary>
    [pbr::OriginalName("PRODUCT_NOT_AVAILABLE")] ProductNotAvailable = 102,
  }

  #endregion

  #region Messages
  public sealed partial class ApiMessage : pb::IMessage<ApiMessage> {
    private static readonly pb::MessageParser<ApiMessage> _parser = new pb::MessageParser<ApiMessage>(() => new ApiMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMessage(ApiMessage other) : this() {
      protocolVersion_ = other.protocolVersion_;
      sequenceId_ = other.sequenceId_;
      switch (other.ApiMessageCase) {
        case ApiMessageOneofCase.StartProduct:
          StartProduct = other.StartProduct.Clone();
          break;
        case ApiMessageOneofCase.GetProductList:
          GetProductList = other.GetProductList.Clone();
          break;
        case ApiMessageOneofCase.ProductStarted:
          ProductStarted = other.ProductStarted.Clone();
          break;
        case ApiMessageOneofCase.ProductList:
          ProductList = other.ProductList.Clone();
          break;
        case ApiMessageOneofCase.ErrorEvent:
          ErrorEvent = other.ErrorEvent.Clone();
          break;
        case ApiMessageOneofCase.ProductFinished:
          ProductFinished = other.ProductFinished.Clone();
          break;
        case ApiMessageOneofCase.ProductAvailabilityChanged:
          ProductAvailabilityChanged = other.ProductAvailabilityChanged.Clone();
          break;
        case ApiMessageOneofCase.RinsingUpcoming:
          RinsingUpcoming = other.RinsingUpcoming.Clone();
          break;
        case ApiMessageOneofCase.UnknownMessage:
          UnknownMessage = other.UnknownMessage.Clone();
          break;
        case ApiMessageOneofCase.WrongCrc:
          WrongCrc = other.WrongCrc.Clone();
          break;
        case ApiMessageOneofCase.BrokenMessage:
          BrokenMessage = other.BrokenMessage.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMessage Clone() {
      return new ApiMessage(this);
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private uint protocolVersion_;
    /// <summary>
    /// currently always with value 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "sequence_id" field.</summary>
    public const int SequenceIdFieldNumber = 2;
    private uint sequenceId_;
    /// <summary>
    /// wrap around to 0 at 255; i.e. it is treated as uint8
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SequenceId {
      get { return sequenceId_; }
      set {
        sequenceId_ = value;
      }
    }

    /// <summary>Field number for the "start_product" field.</summary>
    public const int StartProductFieldNumber = 4097;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.StartProduct StartProduct {
      get { return apiMessageCase_ == ApiMessageOneofCase.StartProduct ? (global::RemoteApiRs232.StartProduct) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.StartProduct;
      }
    }

    /// <summary>Field number for the "get_product_list" field.</summary>
    public const int GetProductListFieldNumber = 4098;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.GetProductList GetProductList {
      get { return apiMessageCase_ == ApiMessageOneofCase.GetProductList ? (global::RemoteApiRs232.GetProductList) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.GetProductList;
      }
    }

    /// <summary>Field number for the "product_started" field.</summary>
    public const int ProductStartedFieldNumber = 16385;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.ProductStarted ProductStarted {
      get { return apiMessageCase_ == ApiMessageOneofCase.ProductStarted ? (global::RemoteApiRs232.ProductStarted) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.ProductStarted;
      }
    }

    /// <summary>Field number for the "product_list" field.</summary>
    public const int ProductListFieldNumber = 16386;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.ProductList ProductList {
      get { return apiMessageCase_ == ApiMessageOneofCase.ProductList ? (global::RemoteApiRs232.ProductList) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.ProductList;
      }
    }

    /// <summary>Field number for the "error_event" field.</summary>
    public const int ErrorEventFieldNumber = 32768;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.ErrorEvent ErrorEvent {
      get { return apiMessageCase_ == ApiMessageOneofCase.ErrorEvent ? (global::RemoteApiRs232.ErrorEvent) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.ErrorEvent;
      }
    }

    /// <summary>Field number for the "product_finished" field.</summary>
    public const int ProductFinishedFieldNumber = 32769;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.ProductFinished ProductFinished {
      get { return apiMessageCase_ == ApiMessageOneofCase.ProductFinished ? (global::RemoteApiRs232.ProductFinished) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.ProductFinished;
      }
    }

    /// <summary>Field number for the "product_availability_changed" field.</summary>
    public const int ProductAvailabilityChangedFieldNumber = 32770;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.ProductAvailabilityChanged ProductAvailabilityChanged {
      get { return apiMessageCase_ == ApiMessageOneofCase.ProductAvailabilityChanged ? (global::RemoteApiRs232.ProductAvailabilityChanged) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.ProductAvailabilityChanged;
      }
    }

    /// <summary>Field number for the "rinsing_upcoming" field.</summary>
    public const int RinsingUpcomingFieldNumber = 32771;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.RinsingUpcoming RinsingUpcoming {
      get { return apiMessageCase_ == ApiMessageOneofCase.RinsingUpcoming ? (global::RemoteApiRs232.RinsingUpcoming) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.RinsingUpcoming;
      }
    }

    /// <summary>Field number for the "unknown_message" field.</summary>
    public const int UnknownMessageFieldNumber = 49152;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.UnknownMessage UnknownMessage {
      get { return apiMessageCase_ == ApiMessageOneofCase.UnknownMessage ? (global::RemoteApiRs232.UnknownMessage) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.UnknownMessage;
      }
    }

    /// <summary>Field number for the "wrong_crc" field.</summary>
    public const int WrongCrcFieldNumber = 49153;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.WrongCrc WrongCrc {
      get { return apiMessageCase_ == ApiMessageOneofCase.WrongCrc ? (global::RemoteApiRs232.WrongCrc) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.WrongCrc;
      }
    }

    /// <summary>Field number for the "broken_message" field.</summary>
    public const int BrokenMessageFieldNumber = 49154;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.BrokenMessage BrokenMessage {
      get { return apiMessageCase_ == ApiMessageOneofCase.BrokenMessage ? (global::RemoteApiRs232.BrokenMessage) apiMessage_ : null; }
      set {
        apiMessage_ = value;
        apiMessageCase_ = value == null ? ApiMessageOneofCase.None : ApiMessageOneofCase.BrokenMessage;
      }
    }

    private object apiMessage_;
    /// <summary>Enum of possible cases for the "api_message" oneof.</summary>
    public enum ApiMessageOneofCase {
      None = 0,
      StartProduct = 4097,
      GetProductList = 4098,
      ProductStarted = 16385,
      ProductList = 16386,
      ErrorEvent = 32768,
      ProductFinished = 32769,
      ProductAvailabilityChanged = 32770,
      RinsingUpcoming = 32771,
      UnknownMessage = 49152,
      WrongCrc = 49153,
      BrokenMessage = 49154,
    }
    private ApiMessageOneofCase apiMessageCase_ = ApiMessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiMessageOneofCase ApiMessageCase {
      get { return apiMessageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearApiMessage() {
      apiMessageCase_ = ApiMessageOneofCase.None;
      apiMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (SequenceId != other.SequenceId) return false;
      if (!object.Equals(StartProduct, other.StartProduct)) return false;
      if (!object.Equals(GetProductList, other.GetProductList)) return false;
      if (!object.Equals(ProductStarted, other.ProductStarted)) return false;
      if (!object.Equals(ProductList, other.ProductList)) return false;
      if (!object.Equals(ErrorEvent, other.ErrorEvent)) return false;
      if (!object.Equals(ProductFinished, other.ProductFinished)) return false;
      if (!object.Equals(ProductAvailabilityChanged, other.ProductAvailabilityChanged)) return false;
      if (!object.Equals(RinsingUpcoming, other.RinsingUpcoming)) return false;
      if (!object.Equals(UnknownMessage, other.UnknownMessage)) return false;
      if (!object.Equals(WrongCrc, other.WrongCrc)) return false;
      if (!object.Equals(BrokenMessage, other.BrokenMessage)) return false;
      if (ApiMessageCase != other.ApiMessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (SequenceId != 0) hash ^= SequenceId.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.StartProduct) hash ^= StartProduct.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.GetProductList) hash ^= GetProductList.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.ProductStarted) hash ^= ProductStarted.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.ProductList) hash ^= ProductList.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.ErrorEvent) hash ^= ErrorEvent.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.ProductFinished) hash ^= ProductFinished.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.ProductAvailabilityChanged) hash ^= ProductAvailabilityChanged.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.RinsingUpcoming) hash ^= RinsingUpcoming.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.UnknownMessage) hash ^= UnknownMessage.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.WrongCrc) hash ^= WrongCrc.GetHashCode();
      if (apiMessageCase_ == ApiMessageOneofCase.BrokenMessage) hash ^= BrokenMessage.GetHashCode();
      hash ^= (int) apiMessageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ProtocolVersion);
      }
      if (SequenceId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SequenceId);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.StartProduct) {
        output.WriteRawTag(138, 128, 2);
        output.WriteMessage(StartProduct);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.GetProductList) {
        output.WriteRawTag(146, 128, 2);
        output.WriteMessage(GetProductList);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductStarted) {
        output.WriteRawTag(138, 128, 8);
        output.WriteMessage(ProductStarted);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductList) {
        output.WriteRawTag(146, 128, 8);
        output.WriteMessage(ProductList);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ErrorEvent) {
        output.WriteRawTag(130, 128, 16);
        output.WriteMessage(ErrorEvent);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductFinished) {
        output.WriteRawTag(138, 128, 16);
        output.WriteMessage(ProductFinished);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductAvailabilityChanged) {
        output.WriteRawTag(146, 128, 16);
        output.WriteMessage(ProductAvailabilityChanged);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.RinsingUpcoming) {
        output.WriteRawTag(154, 128, 16);
        output.WriteMessage(RinsingUpcoming);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.UnknownMessage) {
        output.WriteRawTag(130, 128, 24);
        output.WriteMessage(UnknownMessage);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.WrongCrc) {
        output.WriteRawTag(138, 128, 24);
        output.WriteMessage(WrongCrc);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.BrokenMessage) {
        output.WriteRawTag(146, 128, 24);
        output.WriteMessage(BrokenMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ProtocolVersion);
      }
      if (SequenceId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SequenceId);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.StartProduct) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(StartProduct);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.GetProductList) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(GetProductList);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductStarted) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(ProductStarted);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductList) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(ProductList);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ErrorEvent) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(ErrorEvent);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductFinished) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(ProductFinished);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.ProductAvailabilityChanged) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(ProductAvailabilityChanged);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.RinsingUpcoming) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(RinsingUpcoming);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.UnknownMessage) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(UnknownMessage);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.WrongCrc) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(WrongCrc);
      }
      if (apiMessageCase_ == ApiMessageOneofCase.BrokenMessage) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(BrokenMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiMessage other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.SequenceId != 0) {
        SequenceId = other.SequenceId;
      }
      switch (other.ApiMessageCase) {
        case ApiMessageOneofCase.StartProduct:
          if (StartProduct == null) {
            StartProduct = new global::RemoteApiRs232.StartProduct();
          }
          StartProduct.MergeFrom(other.StartProduct);
          break;
        case ApiMessageOneofCase.GetProductList:
          if (GetProductList == null) {
            GetProductList = new global::RemoteApiRs232.GetProductList();
          }
          GetProductList.MergeFrom(other.GetProductList);
          break;
        case ApiMessageOneofCase.ProductStarted:
          if (ProductStarted == null) {
            ProductStarted = new global::RemoteApiRs232.ProductStarted();
          }
          ProductStarted.MergeFrom(other.ProductStarted);
          break;
        case ApiMessageOneofCase.ProductList:
          if (ProductList == null) {
            ProductList = new global::RemoteApiRs232.ProductList();
          }
          ProductList.MergeFrom(other.ProductList);
          break;
        case ApiMessageOneofCase.ErrorEvent:
          if (ErrorEvent == null) {
            ErrorEvent = new global::RemoteApiRs232.ErrorEvent();
          }
          ErrorEvent.MergeFrom(other.ErrorEvent);
          break;
        case ApiMessageOneofCase.ProductFinished:
          if (ProductFinished == null) {
            ProductFinished = new global::RemoteApiRs232.ProductFinished();
          }
          ProductFinished.MergeFrom(other.ProductFinished);
          break;
        case ApiMessageOneofCase.ProductAvailabilityChanged:
          if (ProductAvailabilityChanged == null) {
            ProductAvailabilityChanged = new global::RemoteApiRs232.ProductAvailabilityChanged();
          }
          ProductAvailabilityChanged.MergeFrom(other.ProductAvailabilityChanged);
          break;
        case ApiMessageOneofCase.RinsingUpcoming:
          if (RinsingUpcoming == null) {
            RinsingUpcoming = new global::RemoteApiRs232.RinsingUpcoming();
          }
          RinsingUpcoming.MergeFrom(other.RinsingUpcoming);
          break;
        case ApiMessageOneofCase.UnknownMessage:
          if (UnknownMessage == null) {
            UnknownMessage = new global::RemoteApiRs232.UnknownMessage();
          }
          UnknownMessage.MergeFrom(other.UnknownMessage);
          break;
        case ApiMessageOneofCase.WrongCrc:
          if (WrongCrc == null) {
            WrongCrc = new global::RemoteApiRs232.WrongCrc();
          }
          WrongCrc.MergeFrom(other.WrongCrc);
          break;
        case ApiMessageOneofCase.BrokenMessage:
          if (BrokenMessage == null) {
            BrokenMessage = new global::RemoteApiRs232.BrokenMessage();
          }
          BrokenMessage.MergeFrom(other.BrokenMessage);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolVersion = input.ReadUInt32();
            break;
          }
          case 16: {
            SequenceId = input.ReadUInt32();
            break;
          }
          case 32778: {
            global::RemoteApiRs232.StartProduct subBuilder = new global::RemoteApiRs232.StartProduct();
            if (apiMessageCase_ == ApiMessageOneofCase.StartProduct) {
              subBuilder.MergeFrom(StartProduct);
            }
            input.ReadMessage(subBuilder);
            StartProduct = subBuilder;
            break;
          }
          case 32786: {
            global::RemoteApiRs232.GetProductList subBuilder = new global::RemoteApiRs232.GetProductList();
            if (apiMessageCase_ == ApiMessageOneofCase.GetProductList) {
              subBuilder.MergeFrom(GetProductList);
            }
            input.ReadMessage(subBuilder);
            GetProductList = subBuilder;
            break;
          }
          case 131082: {
            global::RemoteApiRs232.ProductStarted subBuilder = new global::RemoteApiRs232.ProductStarted();
            if (apiMessageCase_ == ApiMessageOneofCase.ProductStarted) {
              subBuilder.MergeFrom(ProductStarted);
            }
            input.ReadMessage(subBuilder);
            ProductStarted = subBuilder;
            break;
          }
          case 131090: {
            global::RemoteApiRs232.ProductList subBuilder = new global::RemoteApiRs232.ProductList();
            if (apiMessageCase_ == ApiMessageOneofCase.ProductList) {
              subBuilder.MergeFrom(ProductList);
            }
            input.ReadMessage(subBuilder);
            ProductList = subBuilder;
            break;
          }
          case 262146: {
            global::RemoteApiRs232.ErrorEvent subBuilder = new global::RemoteApiRs232.ErrorEvent();
            if (apiMessageCase_ == ApiMessageOneofCase.ErrorEvent) {
              subBuilder.MergeFrom(ErrorEvent);
            }
            input.ReadMessage(subBuilder);
            ErrorEvent = subBuilder;
            break;
          }
          case 262154: {
            global::RemoteApiRs232.ProductFinished subBuilder = new global::RemoteApiRs232.ProductFinished();
            if (apiMessageCase_ == ApiMessageOneofCase.ProductFinished) {
              subBuilder.MergeFrom(ProductFinished);
            }
            input.ReadMessage(subBuilder);
            ProductFinished = subBuilder;
            break;
          }
          case 262162: {
            global::RemoteApiRs232.ProductAvailabilityChanged subBuilder = new global::RemoteApiRs232.ProductAvailabilityChanged();
            if (apiMessageCase_ == ApiMessageOneofCase.ProductAvailabilityChanged) {
              subBuilder.MergeFrom(ProductAvailabilityChanged);
            }
            input.ReadMessage(subBuilder);
            ProductAvailabilityChanged = subBuilder;
            break;
          }
          case 262170: {
            global::RemoteApiRs232.RinsingUpcoming subBuilder = new global::RemoteApiRs232.RinsingUpcoming();
            if (apiMessageCase_ == ApiMessageOneofCase.RinsingUpcoming) {
              subBuilder.MergeFrom(RinsingUpcoming);
            }
            input.ReadMessage(subBuilder);
            RinsingUpcoming = subBuilder;
            break;
          }
          case 393218: {
            global::RemoteApiRs232.UnknownMessage subBuilder = new global::RemoteApiRs232.UnknownMessage();
            if (apiMessageCase_ == ApiMessageOneofCase.UnknownMessage) {
              subBuilder.MergeFrom(UnknownMessage);
            }
            input.ReadMessage(subBuilder);
            UnknownMessage = subBuilder;
            break;
          }
          case 393226: {
            global::RemoteApiRs232.WrongCrc subBuilder = new global::RemoteApiRs232.WrongCrc();
            if (apiMessageCase_ == ApiMessageOneofCase.WrongCrc) {
              subBuilder.MergeFrom(WrongCrc);
            }
            input.ReadMessage(subBuilder);
            WrongCrc = subBuilder;
            break;
          }
          case 393234: {
            global::RemoteApiRs232.BrokenMessage subBuilder = new global::RemoteApiRs232.BrokenMessage();
            if (apiMessageCase_ == ApiMessageOneofCase.BrokenMessage) {
              subBuilder.MergeFrom(BrokenMessage);
            }
            input.ReadMessage(subBuilder);
            BrokenMessage = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Request to start pouring a new product. The matching response is the
  /// 'ProductStarted' message.
  /// </summary>
  public sealed partial class StartProduct : pb::IMessage<StartProduct> {
    private static readonly pb::MessageParser<StartProduct> _parser = new pb::MessageParser<StartProduct>(() => new StartProduct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartProduct(StartProduct other) : this() {
      productId_ = other.productId_;
      startDelayS_ = other.startDelayS_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartProduct Clone() {
      return new StartProduct(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private string productId_ = "";
    /// <summary>
    /// The product id of the product to be started
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_delay_s" field.</summary>
    public const int StartDelaySFieldNumber = 2;
    private double startDelayS_;
    /// <summary>
    /// A delay after which the pouring should start
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StartDelayS {
      get { return startDelayS_; }
      set {
        startDelayS_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StartDelayS, other.StartDelayS)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (StartDelayS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StartDelayS);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (StartDelayS != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(StartDelayS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (StartDelayS != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartProduct other) {
      if (other == null) {
        return;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.StartDelayS != 0D) {
        StartDelayS = other.StartDelayS;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
          case 17: {
            StartDelayS = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Request to get a list of all known products with their ids and product names.
  /// The matching response is the 'ProductList' message.
  /// </summary>
  public sealed partial class GetProductList : pb::IMessage<GetProductList> {
    private static readonly pb::MessageParser<GetProductList> _parser = new pb::MessageParser<GetProductList>(() => new GetProductList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProductList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProductList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProductList(GetProductList other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProductList Clone() {
      return new GetProductList(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProductList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProductList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProductList other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Response message for the 'StartProduct' message.
  ///
  /// The response_code shows whether the start was successful or not. Once
  /// the product has completed pouring
  /// </summary>
  public sealed partial class ProductStarted : pb::IMessage<ProductStarted> {
    private static readonly pb::MessageParser<ProductStarted> _parser = new pb::MessageParser<ProductStarted>(() => new ProductStarted());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductStarted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductStarted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductStarted(ProductStarted other) : this() {
      responseCode_ = other.responseCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductStarted Clone() {
      return new ProductStarted(this);
    }

    /// <summary>Field number for the "response_code" field.</summary>
    public const int ResponseCodeFieldNumber = 1;
    private global::RemoteApiRs232.ResponseCode responseCode_ = global::RemoteApiRs232.ResponseCode.UnknownResponseCode;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.ResponseCode ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductStarted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductStarted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseCode != other.ResponseCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) hash ^= ResponseCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResponseCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductStarted other) {
      if (other == null) {
        return;
      }
      if (other.ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) {
        ResponseCode = other.ResponseCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResponseCode = (global::RemoteApiRs232.ResponseCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProductList : pb::IMessage<ProductList> {
    private static readonly pb::MessageParser<ProductList> _parser = new pb::MessageParser<ProductList>(() => new ProductList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductList(ProductList other) : this() {
      responseCode_ = other.responseCode_;
      productList_ = other.productList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductList Clone() {
      return new ProductList(this);
    }

    /// <summary>Field number for the "response_code" field.</summary>
    public const int ResponseCodeFieldNumber = 1;
    private global::RemoteApiRs232.ResponseCode responseCode_ = global::RemoteApiRs232.ResponseCode.UnknownResponseCode;
    /// <summary>
    /// The response_code shows whether the 'GetProductList' request
    /// was successfull
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RemoteApiRs232.ResponseCode ResponseCode {
      get { return responseCode_; }
      set {
        responseCode_ = value;
      }
    }

    /// <summary>Field number for the "product_list" field.</summary>
    public const int ProductList_FieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_productList_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<string, string> productList_ = new pbc::MapField<string, string>();
    /// <summary>
    /// key contains the product names as shown on the UI, value
    /// contains the product id needed by the 'StartProduct' message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ProductList_ {
      get { return productList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResponseCode != other.ResponseCode) return false;
      if (!ProductList_.Equals(other.ProductList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) hash ^= ResponseCode.GetHashCode();
      hash ^= ProductList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ResponseCode);
      }
      productList_.WriteTo(output, _map_productList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResponseCode);
      }
      size += productList_.CalculateSize(_map_productList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductList other) {
      if (other == null) {
        return;
      }
      if (other.ResponseCode != global::RemoteApiRs232.ResponseCode.UnknownResponseCode) {
        ResponseCode = other.ResponseCode;
      }
      productList_.Add(other.productList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ResponseCode = (global::RemoteApiRs232.ResponseCode) input.ReadEnum();
            break;
          }
          case 18: {
            productList_.AddEntriesFrom(input, _map_productList_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// A message indicating a status change on the coffee machine. The meaning
  /// of the error numbers is described in a separate place. The numbers
  /// consist of error conditions as well as the disappearance of such error
  /// conditions.
  /// The 'tittle' field contains an english error message that describes
  /// the error condition related to the 'error_number'.
  /// The 'source_index' may contain more details in case the component
  /// causing the error exists multiple times. For example when a bean hopper
  /// is removed, the 'source_index' will tell you, which bean hopper was
  /// removed (0 or 1). In these cases the 'title' will usually contain a '%1'
  /// at the place where 'source_index' should be included.
  /// </summary>
  public sealed partial class ErrorEvent : pb::IMessage<ErrorEvent> {
    private static readonly pb::MessageParser<ErrorEvent> _parser = new pb::MessageParser<ErrorEvent>(() => new ErrorEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorEvent(ErrorEvent other) : this() {
      errorNumber_ = other.errorNumber_;
      title_ = other.title_;
      sourceIndex_ = other.sourceIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorEvent Clone() {
      return new ErrorEvent(this);
    }

    /// <summary>Field number for the "error_number" field.</summary>
    public const int ErrorNumberFieldNumber = 1;
    private uint errorNumber_;
    /// <summary>
    /// number identifying the error condition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ErrorNumber {
      get { return errorNumber_; }
      set {
        errorNumber_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// text describing the error related to the error number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_index" field.</summary>
    public const int SourceIndexFieldNumber = 3;
    private uint sourceIndex_;
    /// <summary>
    /// index describing the source of the error in some more details
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SourceIndex {
      get { return sourceIndex_; }
      set {
        sourceIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorNumber != other.ErrorNumber) return false;
      if (Title != other.Title) return false;
      if (SourceIndex != other.SourceIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorNumber != 0) hash ^= ErrorNumber.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (SourceIndex != 0) hash ^= SourceIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorNumber != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ErrorNumber);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (SourceIndex != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SourceIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ErrorNumber);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (SourceIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorEvent other) {
      if (other == null) {
        return;
      }
      if (other.ErrorNumber != 0) {
        ErrorNumber = other.ErrorNumber;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.SourceIndex != 0) {
        SourceIndex = other.SourceIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorNumber = input.ReadUInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            SourceIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Event to tell the remote client when a product has finished. Such
  /// events are sent for products started through the API as well as
  /// any products or rinse-operations started by the UI.
  /// </summary>
  public sealed partial class ProductFinished : pb::IMessage<ProductFinished> {
    private static readonly pb::MessageParser<ProductFinished> _parser = new pb::MessageParser<ProductFinished>(() => new ProductFinished());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductFinished> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductFinished() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductFinished(ProductFinished other) : this() {
      productId_ = other.productId_;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductFinished Clone() {
      return new ProductFinished(this);
    }

    /// <summary>Field number for the "product_id" field.</summary>
    public const int ProductIdFieldNumber = 1;
    private string productId_ = "";
    /// <summary>
    /// The product id of the product that has finished
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    /// <summary>
    /// A flag indicating whether the UI considers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductFinished);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductFinished other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProductId != other.ProductId) return false;
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProductId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProductId);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductFinished other) {
      if (other == null) {
        return;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProductId = input.ReadString();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Event message indicating the changed availability of products.
  /// Unavailable products are still known on the machine, however
  /// when trying to the start such a product, the machine will report
  /// PRODUCT_NOT_AVAILABLE. The reason for a product not being
  /// available is usually someting like an empty milk container, a
  /// boiler temperature that has not yet been reached. A corresponding
  /// ErrorEvent has then been sent as well.
  /// The field 'product_ids' will always contain a complete list of
  /// available products. Thus the unavailable products will be the
  /// list of products reported by 'ProductList' without those in the
  /// 'ProductAvailabilityChanged' message.
  /// </summary>
  public sealed partial class ProductAvailabilityChanged : pb::IMessage<ProductAvailabilityChanged> {
    private static readonly pb::MessageParser<ProductAvailabilityChanged> _parser = new pb::MessageParser<ProductAvailabilityChanged>(() => new ProductAvailabilityChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProductAvailabilityChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAvailabilityChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAvailabilityChanged(ProductAvailabilityChanged other) : this() {
      productIds_ = other.productIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProductAvailabilityChanged Clone() {
      return new ProductAvailabilityChanged(this);
    }

    /// <summary>Field number for the "product_ids" field.</summary>
    public const int ProductIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_productIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> productIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ProductIds {
      get { return productIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProductAvailabilityChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProductAvailabilityChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!productIds_.Equals(other.productIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= productIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      productIds_.WriteTo(output, _repeated_productIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += productIds_.CalculateSize(_repeated_productIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProductAvailabilityChanged other) {
      if (other == null) {
        return;
      }
      productIds_.Add(other.productIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            productIds_.AddEntriesFrom(input, _repeated_productIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Informs in how many milliseconds the coffee machine is about
  /// to execute a rinse operation. During the rinse operation any
  /// attempt to start a product will return a SYSTEM_BUSY status.
  /// </summary>
  public sealed partial class RinsingUpcoming : pb::IMessage<RinsingUpcoming> {
    private static readonly pb::MessageParser<RinsingUpcoming> _parser = new pb::MessageParser<RinsingUpcoming>(() => new RinsingUpcoming());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RinsingUpcoming> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RinsingUpcoming() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RinsingUpcoming(RinsingUpcoming other) : this() {
      startInMs_ = other.startInMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RinsingUpcoming Clone() {
      return new RinsingUpcoming(this);
    }

    /// <summary>Field number for the "start_in_ms" field.</summary>
    public const int StartInMsFieldNumber = 1;
    private uint startInMs_;
    /// <summary>
    /// Number in milliseconds when rinse will be started
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StartInMs {
      get { return startInMs_; }
      set {
        startInMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RinsingUpcoming);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RinsingUpcoming other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartInMs != other.StartInMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartInMs != 0) hash ^= StartInMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartInMs != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StartInMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartInMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartInMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RinsingUpcoming other) {
      if (other == null) {
        return;
      }
      if (other.StartInMs != 0) {
        StartInMs = other.StartInMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartInMs = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// The remote control service has received a message with
  /// a message id that is not currently supported.
  /// </summary>
  public sealed partial class UnknownMessage : pb::IMessage<UnknownMessage> {
    private static readonly pb::MessageParser<UnknownMessage> _parser = new pb::MessageParser<UnknownMessage>(() => new UnknownMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnknownMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownMessage(UnknownMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnknownMessage Clone() {
      return new UnknownMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnknownMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnknownMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnknownMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///*
  /// The remote control service has received a message with
  /// an invalid CRC value. No operation was executed.
  /// </summary>
  public sealed partial class WrongCrc : pb::IMessage<WrongCrc> {
    private static readonly pb::MessageParser<WrongCrc> _parser = new pb::MessageParser<WrongCrc>(() => new WrongCrc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WrongCrc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WrongCrc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WrongCrc(WrongCrc other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WrongCrc Clone() {
      return new WrongCrc(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WrongCrc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WrongCrc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WrongCrc other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///*
  /// The remote control service has received a message with
  /// a valid CRC value but the contained message could not
  /// be parsed according to this protobuf description
  /// </summary>
  public sealed partial class BrokenMessage : pb::IMessage<BrokenMessage> {
    private static readonly pb::MessageParser<BrokenMessage> _parser = new pb::MessageParser<BrokenMessage>(() => new BrokenMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BrokenMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RemoteApiRs232.CoffeeprotoReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrokenMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrokenMessage(BrokenMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BrokenMessage Clone() {
      return new BrokenMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BrokenMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BrokenMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BrokenMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
